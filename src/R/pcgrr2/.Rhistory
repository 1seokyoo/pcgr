library(deconstructSigs)
help("mut.to.sigs.input")
seqnames(BSgenome.Hsapiens.UCSC.hg19)
seqnames(BSgenome.Hsapiens.UCSC.hg19::Hsapiens)
vcf_gz_file <- '/Users/sigven/research/docker/pcgr/examples/cov50-ensemble-annotated-decomposed.pcgr.vcf.gz'
load(file="../../../data/rda/")
load(file="../../../data/rda/pcgr_data.rda")
sample_calls <- pcgrr2::get_calls(query_vcf = vcf_gz_file, pcgr_data = pcgr_data, call_conf_tag = 'STATUS')
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
sample_calls <- pcgrr2::get_calls(query_vcf = vcf_gz_file, pcgr_data = pcgr_data, call_conf_tag = 'STATUS')
sample_calls <- pcgrr2::get_calls(query_vcf = vcf_gz_file, pcgr_data = pcgr_data, sample_id = 'test', call_conf_tag = 'STATUS')
sample_calls <- pcgrr2::get_calls(vcf_gz_file, pcgr_data = pcgr_data, sample_id = 'test', call_conf_tag = 'STATUS')
GenomeInfoDb::seqlevels(GenomeInfoDb::seqinfo(BSgenome.Hsapiens.UCSC.hg19))
levels(vcf_data_df$CHROM)
unique(vcf_data_df$CHROM)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
sample_calls <- pcgrr2::get_calls(vcf_gz_file, pcgr_data = pcgr_data, sample_id = 'test', call_conf_tag = 'STATUS')
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
query_vcf <- vcf_gz_file
sample_id <- 'test'
call_conf_tag <- 'STATUS'
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
sample_name <- 'test'
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
tumor_dp_tag <- '_na'
tumor_af_tag <- '_na'
normal_dp_tag <- '_na'
normal_af_tag <- '_na'
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
signature_normalization_method <- 'default'
signatures_limit <- 6
predict_MSI <- T
identify_msigs <- T
unique(sample_calls$CHROM)
minimum_n_signature_analysis = 50
vcf_gz_file
vcf_data_vr <- VariantAnnotation::readVcfAsVRanges(vcf_gz_file,genome = "hg19")
#vcf_data_vr <- vcf_data_vr[!is.na(vcf_data_vr$GT) & !(vcf_data_vr$GT == '.'),]
vcf_data_vr <- vcf_data_vr[VariantAnnotation::called(vcf_data_vr)]
vcf_data_vr <- pcgrr2::postprocess_vranges_info(vcf_data_vr)
vcf_data_df <- as.data.frame(vcf_data_vr)
if(!is.null(sample_id)){
vcf_data_df$VCF_SAMPLE_ID <- sample_id
}
vcf_data_df$seqnames
vcf_data_df$GENOME_VERSION <- 'GRCh37'
vcf_data_df <- dplyr::rename(vcf_data_df, CHROM = seqnames, POS = start, REF = ref, ALT = alt, CONSEQUENCE = Consequence, PROTEIN_CHANGE = HGVSp_short)
vcf_data_df$GENOMIC_CHANGE <- paste(paste(paste(paste0("g.chr",vcf_data_df$CHROM),vcf_data_df$POS,sep=":"),vcf_data_df$REF,sep=":"),vcf_data_df$ALT,sep=">")
vcf_data_df$CHROM
vcf_data_df <- pcgrr2::get_deletion_mechanism(vcf_data_df)
vcf_data_df$CHROM
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
vcf_data_vr <- VariantAnnotation::readVcfAsVRanges(vcf_gz_file,genome = "hg19")
#vcf_data_vr <- vcf_data_vr[!is.na(vcf_data_vr$GT) & !(vcf_data_vr$GT == '.'),]
vcf_data_vr <- vcf_data_vr[VariantAnnotation::called(vcf_data_vr)]
vcf_data_vr <- pcgrr2::postprocess_vranges_info(vcf_data_vr)
vcf_data_df <- as.data.frame(vcf_data_vr)
if(!is.null(sample_id)){
vcf_data_df$VCF_SAMPLE_ID <- sample_id
}
vcf_data_df$GENOME_VERSION <- 'GRCh37'
vcf_data_df <- dplyr::rename(vcf_data_df, CHROM = seqnames, POS = start, REF = ref, ALT = alt, CONSEQUENCE = Consequence, PROTEIN_CHANGE = HGVSp_short)
vcf_data_df$GENOMIC_CHANGE <- paste(paste(paste(paste0("g.chr",vcf_data_df$CHROM),vcf_data_df$POS,sep=":"),vcf_data_df$REF,sep=":"),vcf_data_df$ALT,sep=">")
vcf_data_df$CHROM
vcf_data_df <- pcgrr2::get_deletion_mechanism(vcf_data_df)
vcf_data_df$CHROM
identify_msigs
sample_name
minimum_n_signature_analysis
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
warnings()
report_data <- pcgrr2::generate_report_data(sample_calls, pcgr_data = pcgr_data, sample_name = sample_name, minimum_n_signature_analysis = 50, signature_normalization_method = signature_normalization_method, signatures_limit = signatures_limit, predict_MSI = predict_MSI, identify_msigs = identify_msigs)
rlogging::message("Generating data for tiered cancer genome report")
tier1_report <- TRUE
tier2_report <- TRUE
tier3_report <- TRUE
tier4_report <- TRUE
tier5_report <- TRUE
msi_report <- FALSE
clinical_evidence_items_prognostic <- data.frame()
clinical_evidence_items_diagnostic <- data.frame()
clinical_evidence_items_predisposing <- data.frame()
clinical_evidence_items_therapeutic <- data.frame()
variants_tier1_display <- data.frame()
variants_tier2_display <- data.frame()
variants_tier2_hotspots <- data.frame()
variants_tier2_curated_mutations <- data.frame()
variants_tier2_predicted_drivers <- data.frame()
variants_tier3_display <- data.frame()
variants_tier4_display <- data.frame()
variants_tier5_display <- data.frame()
tsv_variants <- NULL
tsv_biomarkers <- NULL
maf_df <- data.frame()
msi_prediction_data <- list()
signature_report <- FALSE
signature_data <- NULL
missing_signature_data <- FALSE
signature_call_set <- data.frame()
min_variants_for_signature <- minimum_n_signature_analysis
biomarker_descriptions <- data.frame()
sample_calls_coding <- sample_calls %>% dplyr::filter(stringr::str_detect(CONSEQUENCE,"stop_gained|stop_lost|start_lost|frameshift_variant|missense_variant|splice_donor|splice_acceptor|inframe_deletion|inframe_insertion"))
rlogging::message(paste0("Number of coding variants: ",nrow(sample_calls_coding)))
sample_calls_noncoding <- sample_calls %>% dplyr::filter(!stringr::str_detect(CONSEQUENCE,"stop_gained|stop_lost|start_lost|frameshift_variant|missense_variant|splice_donor|splice_acceptor|inframe_deletion|inframe_insertion"))
rlogging::message(paste0("Number of noncoding variants: ",nrow(sample_calls_noncoding)))
sample_calls_SNVs <- sample_calls %>% dplyr::filter(VARIANT_CLASS == 'SNV')
sample_calls_INDELs <- sample_calls %>% dplyr::filter(VARIANT_CLASS != 'SNV')
sample_calls$CHROM
signature_call_set <- sample_calls[sample_calls$VARIANT_CLASS == 'SNV',]
signature_call_set <- dplyr::filter(signature_call_set, CHROM != 'MT')
signature_call_set$VCF_SAMPLE_ID <- sample_name
signature_report <- TRUE
mut_data <- signature_call_set
signatures_limit <- 6
bsg <- BSgenome.Hsapiens.UCSC.hg19
help("mut.to.sigs.input")
n_muts = nrow(mut_data)
rlogging::message(paste0("Identifying weighted contributions of known mutational signatures using deconstructSigs (n = ",n_muts," SNVs)"))
rlogging::message(paste0("deconstuctSigs normalization method ('tri.counts.method'): ",normalization_method))
sigs.input <- deconstructSigs::mut.to.sigs.input(mut.ref = mut_data, sample.id = "VCF_SAMPLE_ID",chr = "CHROM",pos = "POS", ref = "REF", alt = "ALT", bsg = bsg)
normalization_method <- 'default'
sigs.input <- deconstructSigs::mut.to.sigs.input(mut.ref = mut_data, sample.id = "VCF_SAMPLE_ID",chr = "CHROM",pos = "POS", ref = "REF", alt = "ALT")
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
report_data <- pcgrr2::generate_report_data(sample_calls, pcgr_data = pcgr_data, sample_name = sample_name, minimum_n_signature_analysis = 50, signature_normalization_method = signature_normalization_method, signatures_limit = signatures_limit, predict_MSI = predict_MSI, identify_msigs = identify_msigs)
pcgr_data$pcgr_tsv_tiered_columns
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
report_data <- pcgrr2::generate_report_data(sample_calls, pcgr_data = pcgr_data, sample_name = sample_name, minimum_n_signature_analysis = 50, signature_normalization_method = signature_normalization_method, signatures_limit = signatures_limit, predict_MSI = predict_MSI, identify_msigs = identify_msigs)
report_data$sample_name <- sample_name
sample_mutational_signatures <- report_data$signature_data$signatures_cancertypes_aetiologies
sample_mutational_signatures$SampleID <- sample_name
sample_mutational_signatures <- dplyr::select(sample_mutational_signatures,-Comments)
report_data$cna_report_tsgene_loss <- FALSE
report_data$cna_report_oncogene_gain <- FALSE
report_data$cna_report_biomarkers <- FALSE
report_data$cna_report_segments <- FALSE
cna_data <- list(ranked_segments = data.frame(), oncogene_amplified = data.frame(), tsgene_homozygous_deletion = data.frame(),cna_df_for_print = data.frame(), cna_biomarkers = data.frame(), cna_biomarker_segments = data.frame())
eval_tier1 <- report_data$tier1_report
eval_tier2 <- report_data$tier2_report
eval_tier3 <- report_data$tier3_report
eval_tier4 <- report_data$tier4_report
eval_tier5 <- report_data$tier5_report
eval_signature_report <- report_data$signature_report
eval_missing_signature_data <- report_data$missing_signature_data
eval_cna_segments <- report_data$cna_report_segments
eval_cna_loss <- report_data$cna_report_tsgene_loss
eval_cna_gain <- report_data$cna_report_oncogene_gain
eval_cna_biomarker <- report_data$cna_report_biomarkers
eval_msi_report <- report_data$msi_report
getwd()
project_directory <- '/Users/sigven/research/docker/pcgr/examples'
logR_gain <- 0.8
logR_homdel <- -0.8
rmarkdown::render(system.file("templates","report.Rmd", package="pcgrr2"), output_file = paste0(sample_name,'.pcgr.html'), output_dir = project_directory, intermediates_dir = project_directory, params = list(logR_gain = logR_gain, logR_homdel = logR_homdel, tier1_report = report_data$tier1_report, tier2_report = report_data$tier2_report, tier3_report = report_data$tier3_report, tier4_report = report_data$tier4_report, tier5_report = report_data$tier5_report, msi_report = report_data$msi_report, cna_report_tsgene_loss = report_data$cna_report_tsgene_loss, cna_report_oncogene_gain = report_data$cna_report_oncogene_gain, cna_report_biomarkers = report_data$cna_report_biomarkers, cna_report_segments = report_data$cna_report_segments, signature_report = report_data$signature_report, missing_signature_data = report_data$missing_signature_data), quiet=T)
head(report_data$tsv_variants)
head(sample_calls)
sample_calls$STATUS
detach("package:pcgrr2", unload=TRUE)
sample_calls[,'STATUS']
sample_calls['STATUS']
sample_calls[,'STATUS']
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
call_conf_tag <- 'STATUS'
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
sample_calls$CALL_CONFIDENCE
detach("package:pcgrr2", unload=TRUE)
cna_file <- '/Users/sigven/research/docker/pcgr/examples/tumor_sample.COAD.cna.tsv'
cna_df_raw <- read.table(file=cna_file,header = T,stringsAsFactors = F,comment.char="", quote="")
cna_df_raw <- dplyr::rename(cna_df_raw, chromosome = Chromosome, LogR = Segment_Mean, segment_start = Start, segment_end = End) %>%
dplyr::distinct()
cna_df <- pcgrr2::get_valid_chromosomes(cna_df_raw, chromosome_column = 'chromosome', bsg = BSgenome.Hsapiens.UCSC.hg19)
head(cna_df)
cna_df <- cna_df %>% dplyr::filter(!is.na(LogR))
cna_df$LogR <- as.numeric(cna_df$LogR)
cna_df$LogR <- round(cna_df$LogR,digits=2)
cna_df$segmentID <- paste0(cna_df$chromosome,":",cna_df$segment_start,":",cna_df$segment_end)
cna_df_raw <- read.table(file=cna_file,header = T,stringsAsFactors = F,comment.char="", quote="")
cna_df_raw <- dplyr::rename(cna_df_raw, chromosome = Chromosome, LogR = Segment_Mean, segment_start = Start, segment_end = End) %>%
dplyr::distinct()
cna_df_raw$chromosome <- stringr::str_replace(cna_df_raw$chromosome,"^chr","")
## VALIDATE INPUT CHROMOSOMES
cna_df <- pcgrr2::get_valid_chromosomes(cna_df_raw, chromosome_column = 'chromosome', bsg = BSgenome.Hsapiens.UCSC.hg19)
head(cna_df)
help(br)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(crosstalk)
help("SharedData")
load('../../../data/rda/pcgr_data.rda')
project_directory <- '/Users/sigven/research/docker/pcgr/examples'
query_vcf <- 'test.vcf'
query_vcf <- 'test3.pcgr.vcf.gz'
sample_name <- 'test3'
logR_gain <- 0.8
logR_homdel <- -0.8
signature_normalization <- 'default'
predict_MSI <- T
identify_msigs <- T
tumor_dp_tag <- 'TDP'
tumor_af_tag <- 'TVAF'
call_conf_tag <- 'TAL'
normal_af_tag <- '_na'
normal_dp_tag <- '_na'
query_cnv <- 'None'
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
project_directory
suppressWarnings(suppressPackageStartupMessages(library(pcgrr2)))
suppressWarnings(suppressPackageStartupMessages(library(magrittr)))
suppressWarnings(suppressPackageStartupMessages(library(BSgenome.Hsapiens.UCSC.hg19)))
suppressWarnings(suppressPackageStartupMessages(library(deconstructSigs)))
suppressWarnings(suppressPackageStartupMessages(library(randomForest)))
suppressWarnings(suppressPackageStartupMessages(library(caret)))
dir <- project_directory
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
getwd()
query_vcf <- paste0(project_directory,'/','test3.pcgr.vcf.gz')
query_vcf
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
load('../../../data/rda/pcgr_data.rda')
predict_MSI
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
Q
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
pcgr_data$indelFracPlot_msi_report
print(pcgr_data$indelFracPlot_msi_report)
print(pcgr_data$indelFracPlot_msi_report)
pcgr_data$indelFracPlot_msi_report
pcgr_data$swissprot_features
getwd()
load('/Users/sigven/research/docker/pcgr/data/rda/pcgr_data.rda')
warnings()
pcgr_data$indelFracPlot_msi_report
rm (pcgr_data)
load('/Users/sigven/research/docker/pcgr/data/rda/pcgr_data.rda')
pcgr_data$indelFracPlot_msi_report
rm (pcgr_data)
load('/Users/sigven/research/docker/pcgr/data/rda/pcgr_data.rda')
pcgr_data$indelFracPlot_msi_report
library(ggplot2)
pcgr_data$indelFracPlot_msi_report
getwd()
load('../../../data/rda/pcgr_data.rda')
pcgr_data$indelFracPlot_msi_report
project_directory <- '/Users/sigven/research/docker/pcgr/examples'
query_vcf <- 'test3.pcgr.vcf.gz'
logR_gain <- 0.8
sample_name <- 'test3'
logR_homdel <- -0.8
signature_normalization <- 'default'
predict_MSI <- T
identify_msigs <- T
tumor_dp_tag <- 'TDP'
tumor_af_tag <- 'TVAF'
call_conf_tag <- 'TAL'
normal_af_tag <- '_na'
normal_dp_tag <- '_na'
if(!is.null(indelFracPlot_template)){
p <- indelFracPlot_template + ggplot2::geom_vline(xintercept=msi_stats$fracNonRepeatIndels[1],size=1.1,linetype=2) + ggplot2::geom_text(mapping=aes(x=msi_stats$fracNonRepeatIndels[1], y=125, label=sample_name), size=5, angle=90, vjust=-0.7, hjust=0)
}
dir <- project_directory
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
getwd()
setwd('/Users/sigven/research/docker/pcgr/examples')
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
library(BSgenome.Hsapiens.UCSC.hg19)
#library(BSgenome.Hsapiens.UCSC.hg38)
library(magrittr)
library(deconstructSigs)
library(data.table)
library(ggplot2)
library(plotly)
library(rlogging)
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
query_cnv <- 'None'
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
getwd()
setwd('/Users/sigven/research/docker/pcgr/examples/')
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
getwd()
setwd('/Users/sigven/research/docker/pcgr/examples')
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
pcgr_data$indelFracPlot_msi_report
indel_frac_sample <- 0.196
sample_name <- 'test3'
pcgr_data$indelFracPlot_msi_report + ggplot2::geom_text(mapping=aes(x=as.numeric(indel_frac_sample), y=125, label=sample_name), size=5, angle=90, vjust=-0.7, hjust=0)
help(geom_text)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
query_cnv
query_cnv <- 'tumor_sample.BRCA.cna.tsv'
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
help("whichSignatures")
help(geom_vline)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
help(geom_text)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
Q
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
setwd('/Users/sigven/research/docker/pcgr/examples')
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
detach("package:pcgrr2", unload=TRUE)
library("pcgrr2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pcgrr2::generate_pcg_report(project_directory = dir, query_vcf = query_vcf, cna_segments_tsv = query_cnv, logR_gain = logR_gain, logR_homdel = logR_homdel, pcgr_data = pcgr_data, sample_name = sample_name, signature_normalization_method = signature_normalization, print_biomarkers = TRUE, print_tier_variants = TRUE, print_mutational_signatures = TRUE, print_cna_segments = TRUE, print_maf = TRUE, print_html_report = TRUE, predict_MSI = predict_MSI, identify_msigs = identify_msigs, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
help(filter_select)
help(datatable)
library(DT)
help(datatable)
library(VariantAnnotation)
help(called)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
library(pcgrr2)
getwd()
setwd('/Users/sigven/research/docker/pcgr/examples')
project_directory <- getwd()
query_vcf <- 'pei_test_DMM023.pcgr.vcf.gz'
logR_gain <- 0.8
logR_homdel <- -0.8
sample_name <- 'pei_test_DMM023'
signature_normalization_method <- 'default'
signature_limit <- 6
print_biomarkers <- T
print_tier_variants <- T
print_mutational_signatures <- T
print_cna_segments <- T
print_maf <- T
print_html_report <- T
predict_MSI <- F
identify_msigs <- F
tumor_dp_tag <- '_na'
tumor_af_tag <- '_na'
normal_af_tag <- '_na'
normal_dp_tag <- '_na'
call_conf_tag <- '_na'
load('../data/rda/pcgr_data.rda')
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
library(BSgenome.Hsapiens.UCSC.hg19)
#library(BSgenome.Hsapiens.UCSC.hg38)
library(magrittr)
library(deconstructSigs)
library(data.table)
library(ggplot2)
library(plotly)
library(rlogging)
sample_calls <- pcgrr2::get_calls(query_vcf, pcgr_data, sample_id = sample_name, tumor_dp_tag = tumor_dp_tag, tumor_af_tag = tumor_af_tag, normal_dp_tag = normal_dp_tag, normal_af_tag = normal_af_tag, call_conf_tag = call_conf_tag)
sample_calls_coding <- sample_calls %>% dplyr::filter(stringr::str_detect(CONSEQUENCE,"stop_gained|stop_lost|start_lost|frameshift_variant|missense_variant|splice_donor|splice_acceptor|inframe_deletion|inframe_insertion"))
variants_tier1 <- pcgrr2::get_clinical_associations_civic_cbmdb(sample_calls_coding, pcgr_data = pcgr_data)
rlogging::message("Looking up biomarkers for precision oncology")
civic_biomarkers <- pcgr_data$civic_biomarkers
cbmdb_biomarkers <- pcgr_data$cbmdb_biomarkers
if("pubmed_html_link" %in% colnames(civic_biomarkers)){
civic_biomarkers <- dplyr::rename(civic_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(civic_biomarkers)){
civic_biomarkers <- dplyr::rename(civic_biomarkers, description = evidence_description)
}
if("pubmed_html_link" %in% colnames(cbmdb_biomarkers)){
cbmdb_biomarkers <- dplyr::rename(cbmdb_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(cbmdb_biomarkers)){
cbmdb_biomarkers <- dplyr::rename(cbmdb_biomarkers, description = evidence_description)
}
biomarker_descriptions <- data.frame()
cbmdb_biomarkers <- dplyr::filter(cbmdb_biomarkers)
civic_biomarkers <- dplyr::filter(civic_biomarkers)
civic_biomarkers <- dplyr::select(civic_biomarkers, -c(status,variant_id))
all_eitems <- data.frame()
rlogging::message("Looking up biomarkers for precision oncology")
civic_biomarkers <- pcgr_data$civic_biomarkers
cbmdb_biomarkers <- pcgr_data$cbmdb_biomarkers
if("pubmed_html_link" %in% colnames(civic_biomarkers)){
civic_biomarkers <- dplyr::rename(civic_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(civic_biomarkers)){
civic_biomarkers <- dplyr::rename(civic_biomarkers, description = evidence_description)
}
if("pubmed_html_link" %in% colnames(cbmdb_biomarkers)){
cbmdb_biomarkers <- dplyr::rename(cbmdb_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(cbmdb_biomarkers)){
cbmdb_biomarkers <- dplyr::rename(cbmdb_biomarkers, description = evidence_description)
}
biomarker_descriptions <- data.frame()
#cbmdb_biomarkers <- dplyr::filter(cbmdb_biomarkers)
#civic_biomarkers <- dplyr::filter(civic_biomarkers)
civic_biomarkers <- dplyr::select(civic_biomarkers, -c(status,variant_id))
all_eitems <- data.frame()
mapping <- 'exact'
sample_calls_civic <- sample_calls %>% dplyr::filter(!is.na(CIVIC_ID))
tmp <- dplyr::select(sample_calls_civic,CIVIC_ID,VAR_ID) %>% tidyr::separate_rows(CIVIC_ID,sep=",")
sample_calls_civic <- merge(tmp,dplyr::select(sample_calls_civic,-c(CIVIC_ID)),by.x = "VAR_ID",by.y = "VAR_ID")
civic_calls <- dplyr::select(sample_calls_civic,dplyr::one_of(pcgr_data$pcgr_all_annotation_columns))
eitems <- dplyr::left_join(civic_calls,dplyr::filter(dplyr::select(civic_biomarkers,-c(civic_exon,civic_consequence,civic_codon,transvar_id,civic_id)),alteration_type == 'MUT'),by=c("CIVIC_ID" = "evidence_id"))
names(eitems) <- toupper(names(eitems))
clinical_evidence_items <- rbind(clinical_evidence_items, eitems)
clinical_evidence_items <- data.frame()
tmp <- dplyr::select(sample_calls_civic,CIVIC_ID,VAR_ID) %>% tidyr::separate_rows(CIVIC_ID,sep=",")
sample_calls_civic <- merge(tmp,dplyr::select(sample_calls_civic,-c(CIVIC_ID)),by.x = "VAR_ID",by.y = "VAR_ID")
civic_calls <- dplyr::select(sample_calls_civic,dplyr::one_of(pcgr_data$pcgr_all_annotation_columns))
eitems <- dplyr::left_join(civic_calls,dplyr::filter(dplyr::select(civic_biomarkers,-c(civic_exon,civic_consequence,civic_codon,transvar_id,civic_id)),alteration_type == 'MUT'),by=c("CIVIC_ID" = "evidence_id"))
names(eitems) <- toupper(names(eitems))
clinical_evidence_items <- rbind(clinical_evidence_items, eitems)
sample_calls_cbmdb <- sample_calls %>% dplyr::filter(is.na(CIVIC_ID) & !is.na(CBMDB_ID))
tmp <- dplyr::select(sample_calls_cbmdb,CBMDB_ID,VAR_ID) %>% tidyr::separate_rows(CBMDB_ID,sep=",")
tmp$CBMDB_ID <- as.integer(tmp$CBMDB_ID)
sample_calls_cbmdb <- merge(tmp,dplyr::select(sample_calls_cbmdb,-c(CBMDB_ID)),by.x = "VAR_ID",by.y = "VAR_ID")
cbmdb_calls <- dplyr::select(sample_calls_cbmdb,dplyr::one_of(pcgr_data$pcgr_all_annotation_columns))
eitems <- dplyr::left_join(cbmdb_calls,dplyr::filter(dplyr::select(cbmdb_biomarkers,-c(drug_family,transvar_id)),alteration_type == 'MUT'),by=c("CBMDB_ID" = "CBMDB_ID"))
names(eitems) <- toupper(names(eitems))
eitems <- eitems %>% dplyr::distinct()
clinical_evidence_items <- rbind(clinical_evidence_items, eitems)
head(eitems)
head(clinical_evidence_items)
colnames(clinical_evidence_items)
colnames(eitems)
load('../data/rda/pcgr_data.rda')
variants_tier1 <- pcgrr2::get_clinical_associations_civic_cbmdb(sample_calls_coding, pcgr_data = pcgr_data)
getwd()
vcf_gz_file
vcf_gz_file <- query_vcf
vcf_gz_file
vcf_data_vr <- VariantAnnotation::readVcfAsVRanges(vcf_gz_file,genome = "hg19")
length(vcf_data_vr)
nrow(vcf_data_vr)
library(BSgenome.Hsapiens.UCSC.hg19)
GenomeInfoDb::seqlengths(BSgenome.Hsapiens.UCSC.hg19)
