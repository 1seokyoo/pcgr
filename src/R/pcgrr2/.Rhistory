library(pcgrr)
library(pcgrr2)
df <- data.frame('CIVIC_ID' = character())
df <- rbind(df, data.frame('CIVIC_ID' = 'EID1'))
df
df <- rbind(df, data.frame('CIVIC_ID' = 'EID2'))
df
stringr::str_detect(df$CIVIC_ID,"EID")
if(stringr::str_detect(df$CIVIC_ID,"EID")){}
if(any(stringr::str_detect(df$CIVIC_ID,"EID"))){}
if(any(stringr::str_detect(df$CIVIC_ID,"EID"))){
cat('balle\n')
}
library(pcgrr2)
pfam <- list('version' = 'Pfam 31.0 (March 2017)')
pfam$version
pfam <- list('version' = 'v31.0 (March 2017)')
uniprot <- list('version' = 'release 2017_03')
pfam <- list('version' = 'v31.0 (March 2017)')
uniprot <- list('version' = 'release 2017_03')
database_versions <- list('pfam' = pfam, 'uniprot' = uniprot)
database_versions$pfam$version
?install.packages
help(install)
library(pcgrr2)
help(install.packages)
help("install")
library(devtools)
help(install)
setwd('/Users/sigven/research/docker/pcgr/examples')
suppressWarnings(suppressPackageStartupMessages(library(pcgrr2)))
suppressWarnings(suppressPackageStartupMessages(library(magrittr)))
suppressWarnings(suppressPackageStartupMessages(library(BSgenome.Hsapiens.UCSC.hg19)))
suppressWarnings(suppressPackageStartupMessages(library(deconstructSigs)))
project_directory <- getwd()
query_vcf <- 'TCGA-A6-2686-01A-01D-1408-10_TCGA-A6-2686-10A-01D-2188-10.pcgr.vcf.gz'
sample_name <- 'TCGA-A6-2686-01A-01D-1408-10_TCGA-A6-2686-10A-01D-2188-10'
load('../data/rda/pcgr_data.rda')
sample_calls <- pcgrr2::get_calls(query_vcf, sample_id = sample_name)
sort(colnames(sample_calls))
minimum_n_signature_analysis <- 50
signatures_limit <- 6
tier1_report <- FALSE
tier2_report <- FALSE
tier3_report <- FALSE
tier4_report <- FALSE
tier5_report <- FALSE
clinical_evidence_items_tier1A <- data.frame()
clinical_evidence_items_tier1B <- data.frame()
clinical_evidence_items_tier1C <- data.frame()
variants_tier1_display <- data.frame()
variants_tier2_display <- data.frame()
variants_tier3_display <- data.frame()
variants_tier4_display <- data.frame()
variants_tier5_display <- data.frame()
signature_report <- FALSE
missing_signature_data <- FALSE
signature_call_set <- data.frame()
sample_calls_coding <- sample_calls %>% dplyr::filter(stringr::str_detect(CONSEQUENCE,"stop_gained|stop_lost|start_lost|frameshift_variant|missense_variant|splice_donor|splice_acceptor|inframe_deletion|inframe_insertion"))
rlogging::message(paste0("Number of coding variants: ",nrow(sample_calls_coding)))
sample_calls_noncoding <- sample_calls %>% dplyr::filter(!stringr::str_detect(CONSEQUENCE,"stop_gained|stop_lost|start_lost|frameshift_variant|missense_variant|splice_donor|splice_acceptor|inframe_deletion|inframe_insertion"))
rlogging::message(paste0("Number of noncoding variants: ",nrow(sample_calls_noncoding)))
#sample_stats_plot_all <- OncoVarReporter::plot_call_statistics(sample_calls,"Somatic calls - all")
#sample_stats_plot_coding <- OncoVarReporter::plot_call_statistics(sample_calls_coding,"Somatic calls - coding")
min_variants_for_signature <- minimum_n_signature_analysis
signature_data <- NULL
tsv_variants <- NULL
tsv_biomarkers <- NULL
if(any(grepl(paste0("VARIANT_CLASS$"),names(sample_calls)))){
if(nrow(sample_calls[sample_calls$VARIANT_CLASS == 'SNV',]) >= min_variants_for_signature){
signature_call_set <- sample_calls[sample_calls$VARIANT_CLASS == 'SNV',]
signature_call_set <- dplyr::filter(signature_call_set, CHROM != 'MT')
signature_call_set$VCF_SAMPLE_ID <- sample_name
signature_report <- TRUE
mut_signature_contributions <- pcgrr2::signature_contributions_single_sample(signature_call_set, sample_name = sample_name, signatures_limit = signatures_limit)
signature_columns <- as.numeric(stringr::str_replace(as.character(mut_signature_contributions$which_signatures_df[mut_signature_contributions$which_signatures_df$signature_id != 'unknown',]$signature_id),"S",""))
weight_df <- data.frame('Signature_ID' = as.character(mut_signature_contributions$which_signatures_df$signature_id), 'Weight' = round(as.numeric(mut_signature_contributions$which_signatures_df$weight),digits=3), stringsAsFactors = F)
cancertypes_aetiologies <- pcgr_data$signatures_aetiologies[signature_columns,]
signatures_cancertypes_aetiologies <- dplyr::left_join(cancertypes_aetiologies,weight_df,by=c("Signature_ID")) %>% dplyr::arrange(desc(Weight))
signatures_cancertypes_aetiologies <- signatures_cancertypes_aetiologies[,c("Signature_ID","Weight","Cancer_types","Proposed_aetiology","Comments")]
signature_data <- list('signature_call_set' = signature_call_set, 'mut_signature_contributions' = mut_signature_contributions, 'signatures_cancertypes_aetiologies' = signatures_cancertypes_aetiologies)
}
else{
if(nrow(sample_calls[sample_calls$VARIANT_CLASS == 'SNV',]) > 0){
signature_call_set <- sample_calls[sample_calls$VARIANT_CLASS == 'SNV',]
signature_call_set <- dplyr::filter(signature_call_set, CHROM != 'MT')
}
rlogging::message(paste0("Too few variants (n = ",nrow(signature_call_set),") for reconstruction of mutational signatures by deconstructSigs"))
missing_signature_data <- TRUE
signature_data <- list('signature_call_set' = signature_call_set)
}
}
vcf_data_df <- sample_calls_coding
mapping <- 'exact'
variant_origin <- 'Somatic Mutation'
if("pubmed_html_link" %in% colnames(pcgr_data$civic_biomarkers)){
pcgr_data$civic_biomarkers <- dplyr::rename(pcgr_data$civic_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(pcgr_data$civic_biomarkers)){
pcgr_data$civic_biomarkers <- dplyr::rename(pcgr_data$civic_biomarkers, description = evidence_description)
}
if("pubmed_html_link" %in% colnames(pcgr_data$cbmdb_biomarkers)){
pcgr_data$cbmdb_biomarkers <- dplyr::rename(pcgr_data$cbmdb_biomarkers, citation = pubmed_html_link)
}
if("evidence_description" %in% colnames(pcgr_data$cbmdb_biomarkers)){
pcgr_data$cbmdb_biomarkers <- dplyr::rename(pcgr_data$cbmdb_biomarkers, description = evidence_description)
}
clinical_evidence_items <- data.frame()
biomarker_descriptions <- data.frame()
pcgr_data$cbmdb_biomarkers <- dplyr::filter(pcgr_data$cbmdb_biomarkers, is.na(variant_origin) | variant_origin == variant_origin)
pcgr_data$civic_biomarkers <- dplyr::filter(pcgr_data$civic_biomarkers, is.na(variant_origin) | variant_origin == variant_origin)
vcf_data_df_civic <- vcf_data_df %>% dplyr::filter(!is.na(CIVIC_ID))
if(nrow(vcf_data_df_civic) > 0){
tmp <- dplyr::select(vcf_data_df_civic,CIVIC_ID,VAR_ID)
tmp <- tmp %>% tidyr::separate_rows(CIVIC_ID,sep=",")
vcf_data_df_civic <- merge(tmp,dplyr::select(vcf_data_df_civic,-c(CIVIC_ID)),by.x = "VAR_ID",by.y = "VAR_ID")
civic_calls <- dplyr::select(vcf_data_df_civic,dplyr::one_of(pcgr_data$pcgr_all_annotation_columns))
eitems <- NULL
if(any(stringr::str_detect(civic_calls$CIVIC_ID,"EID"))){
eitems <- dplyr::left_join(civic_calls,dplyr::filter(dplyr::select(pcgr_data$civic_biomarkers,-c(civic_exon,civic_consequence,civic_codon,transvar_id,civic_id)),alteration_type == 'MUT'),by=c("CIVIC_ID" = "evidence_id"))
}
else{
eitems <- dplyr::left_join(civic_calls,dplyr::filter(dplyr::select(pcgr_data$civic_biomarkers,-c(civic_exon,civic_consequence,civic_codon,transvar_id)),alteration_type == 'MUT'),by=c("CIVIC_ID" = "civic_id"))
}
names(eitems) <- toupper(names(eitems))
eitems$BIOMARKER_MAPPING <- 'exact'
bm_descriptions <- data.frame('description' = eitems$BIOMARKER_DESCRIPTION)
biomarker_descriptions <- rbind(biomarker_descriptions, bm_descriptions)
clinical_evidence_items <- rbind(clinical_evidence_items, eitems)
}
clinical_evidence_items
vcf_data_df_cbmdb <- vcf_data_df %>% dplyr::filter(is.na(CIVIC_ID) & !is.na(CBMDB_ID))
vcf_data_df_cbmdb
colnames(clinical_evidence_items)
pcgr_all_annotation_columns_reduced <- pcgr_data$pcgr_all_annotation_columns[-which(pcgr_data$pcgr_all_annotation_columns == 'EXON' | pcgr_data$pcgr_all_annotation_columns == 'CIVIC_ID' | pcgr_data$pcgr_all_annotation_columns == 'CIVIC_ID_2' | pcgr_data$pcgr_all_annotation_columns == 'CBMDB_ID')]
pcgr_all_annotation_columns_reduced
all_tier1_tags <- c(pcgr_data$pcgr_all_annotation_columns_reduced,c("CLINICAL_SIGNIFICANCE","EVIDENCE_LEVEL","EVIDENCE_TYPE","EVIDENCE_DIRECTION","DISEASE_NAME","DESCRIPTION","CITATION","DRUG_NAMES","RATING"))
clinical_evidence_items <- dplyr::select(clinical_evidence_items, dplyr::one_of(all_tier1_tags))
unique_variants <- clinical_evidence_items %>% dplyr::select(SYMBOL,CONSEQUENCE,PROTEIN_CHANGE,CDS_CHANGE) %>% dplyr::distinct()
clinical_evidence_items
all_tier1_tags
pcgr_all_annotation_columns_reduced <- pcgr_data$pcgr_all_annotation_columns[-which(pcgr_data$pcgr_all_annotation_columns == 'EXON' | pcgr_data$pcgr_all_annotation_columns == 'CIVIC_ID' | pcgr_data$pcgr_all_annotation_columns == 'CIVIC_ID_2' | pcgr_data$pcgr_all_annotation_columns == 'CBMDB_ID')]
pcgr_all_annotation_columns_reduced
all_tier1_tags <- c(pcgr_all_annotation_columns_reduced,c("CLINICAL_SIGNIFICANCE","EVIDENCE_LEVEL","EVIDENCE_TYPE","EVIDENCE_DIRECTION","DISEASE_NAME","DESCRIPTION","CITATION","DRUG_NAMES","RATING"))
all_tier1_tags
report_data <- pcgrr2::generate_report_data(sample_calls, sample_name = sample_name, minimum_n_signature_analysis = 50, signatures_limit = signatures_limit)
report_data <- pcgrr2::generate_report_data(sample_calls, sample_name = sample_name, minimum_n_signature_analysis = 50, signatures_limit = signatures_limit)
pcgrr2::generate_pcg_report(project_directory = getwd(), query_vcf = 'TCGA-A6-2686-01A-01D-1408-10_TCGA-A6-2686-10A-01D-2188-10.pcgr.vcf.gz' sample_name = sample_name, signatures_limit = 6)
pcgrr2::generate_pcg_report(project_directory = getwd(), query_vcf = 'TCGA-A6-2686-01A-01D-1408-10_TCGA-A6-2686-10A-01D-2188-10.pcgr.vcf.gz', sample_name = sample_name, signatures_limit = 6)
